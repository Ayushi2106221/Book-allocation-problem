class Solution 
{
    public:
    bool possibleSol(int A[], int N, int M, int mid){
        int studentCount=1;
        int sumpage=0;
        for(int i=0;i<N;i++){
            if(sumpage+A[i]<=mid){
                sumpage=sumpage+A[i];
            }
            else{
                studentCount++;
                if(studentCount>M || A[i]>mid){
                    return false;
                }
                sumpage=A[i];
            }
            // return true;
        }
         return true;
    }
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        if(M>N)
        return -1;
        int s=0;
        int sum=0;
        for(int i=0;i<N;i++){
            sum=sum+A[i];
        }
        int e=sum;
        int mid=s+(e-s)/2;
        int ans=-1;
        while(s<=e){
            if(possibleSol(A,N,M,mid)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
                
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }
};
